"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var m=(t,c)=>new Promise(i=>{if("touches"in t){let n={x:t.touches[0].clientX,y:t.touches[0].clientY},o=e=>({x:e.touches[0].clientX-n.x,y:n.y-e.touches[0].clientY}),s=e=>_optionalChain([c, 'optionalCall', _ => _(o(e),e)]),u=e=>{window.removeEventListener("touchmove",s),window.removeEventListener("touchend",u),i(o(e))};window.addEventListener("touchmove",s),window.addEventListener("touchend",u)}else{let n={x:t.clientX,y:t.clientY},o=e=>({x:e.clientX-n.x,y:n.y-e.clientY}),s=e=>_optionalChain([c, 'optionalCall', _2 => _2(o(e),e)]),u=e=>{window.removeEventListener("mousemove",s),window.removeEventListener("mouseup",u),i(o(e))};window.addEventListener("mousemove",s),window.addEventListener("mouseup",u)}});exports.minni = m;
